2025-01-20 02:52:57.885 [main] INFO  AnalyticsServiceApplication - Starting AnalyticsServiceApplication using Java 17.0.11 with PID 10264 (C:\Users\omera\Desktop\laboratory-reporting-project\backend\analytics-service\target\classes started by asaf in C:\Users\omera\Desktop\laboratory-reporting-project)
2025-01-20 02:52:57.892 [main] DEBUG AnalyticsServiceApplication - Running with Spring Boot v3.3.3, Spring v6.1.12
2025-01-20 02:52:57.893 [main] INFO  AnalyticsServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-20 02:52:57.945 [main] INFO  ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2025-01-20 02:52:57.946 [main] INFO  ConfigServerConfigDataLoader - Located environment: name=analytics-service, profiles=[default], label=null, version=893b91768adbc0eed10d53f79e497402ed99ef19, state=null
2025-01-20 02:52:59.485 [main] INFO  GenericScope - BeanFactory id=5ae5a929-18f8-33ea-809b-e061c9c22bd0
2025-01-20 02:52:59.693 [main] WARN  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-20 02:52:59.697 [main] WARN  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-20 02:53:00.032 [main] INFO  TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-20 02:53:00.042 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-20 02:53:00.046 [main] INFO  StandardService - Starting service [Tomcat]
2025-01-20 02:53:00.046 [main] INFO  StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-01-20 02:53:00.122 [main] INFO  [/] - Initializing Spring embedded WebApplicationContext
2025-01-20 02:53:00.123 [main] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2174 ms
2025-01-20 02:53:00.867 [main] WARN  HazelcastInstanceFactory - Hazelcast is starting in a Java modular environment (Java 9 and newer) but without proper access to required Java packages. Use additional Java arguments to provide Hazelcast access to Java internal API. The internal API access is used to get the best performance results. Arguments to be used:
 --add-modules java.se --add-exports java.base/jdk.internal.ref=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.management/sun.management=ALL-UNNAMED --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED
2025-01-20 02:53:01.276 [main] WARN  AddressPicker - [LOCAL] [dev] [5.4.0] Ignoring TCP_KEEPCOUNT. It seems your JDK does not support jdk.net.ExtendedSocketOptions on this OS. Try upgrading to the latest JDK or check with your JDK vendor.Alternatively, on Linux, configure tcp_keepalive_probes in the kernel (affecting default keep-alive configuration for all sockets): For more info see https://tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/. If this isn't dealt with, idle connections could be closed prematurely.
2025-01-20 02:53:01.277 [main] WARN  AddressPicker - [LOCAL] [dev] [5.4.0] Ignoring TCP_KEEPIDLE. It seems your JDK does not support jdk.net.ExtendedSocketOptions on this OS. Try upgrading to the latest JDK or check with your JDK vendor.Alternatively, on Linux, configure tcp_keepalive_time in the kernel (affecting default keep-alive configuration for all sockets): For more info see https://tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/. If this isn't dealt with, idle connections could be closed prematurely.
2025-01-20 02:53:01.277 [main] WARN  AddressPicker - [LOCAL] [dev] [5.4.0] Ignoring TCP_KEEPINTERVAL. It seems your JDK does not support jdk.net.ExtendedSocketOptions on this OS. Try upgrading to the latest JDK or check with your JDK vendor.Alternatively, on Linux, configure tcp_keepalive_intvl in the kernel (affecting default keep-alive configuration for all sockets): For more info see https://tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/. If this isn't dealt with, idle connections could be closed prematurely.
2025-01-20 02:53:01.318 [main] INFO  logo - [192.168.1.101]:5701 [dev] [5.4.0] 
	o    o     o     o---o   o--o o      o---o     o     o----o o--o--o
	|    |    / \       /         |     /         / \    |         |   
	o----o       o     o   o----o |    o             o   o----o    |   
	|    |  *     \   /           |     \       *     \       |    |   
	o    o *       o o---o   o--o o----o o---o *       o o----o    o   
2025-01-20 02:53:01.318 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] Copyright (c) 2008-2024, Hazelcast, Inc. All Rights Reserved.
2025-01-20 02:53:01.319 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] Hazelcast Platform 5.4.0 (20240415) starting at [192.168.1.101]:5701
2025-01-20 02:53:01.319 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] Cluster name: dev
2025-01-20 02:53:01.319 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] Integrity Checker is disabled. Fail-fast on corrupted executables will not be performed. For more information, see the documentation for Integrity Checker.
2025-01-20 02:53:01.323 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] The Jet engine is disabled.
To enable the Jet engine on the members, do one of the following:
  - Change member config using Java API: config.getJetConfig().setEnabled(true)
  - Change XML/YAML configuration property: Set hazelcast.jet.enabled to true
  - Add system property: -Dhz.jet.enabled=true (for Hazelcast embedded, works only when loading config via Config.load)
  - Add environment variable: HZ_JET_ENABLED=true (recommended when running container image. For Hazelcast embedded, works only when loading config via Config.load)
2025-01-20 02:53:02.193 [main] INFO  security - [192.168.1.101]:5701 [dev] [5.4.0] Enable DEBUG/FINE log level for log category com.hazelcast.system.security  or use -Dhazelcast.security.recommendations system property to see security recommendations and the status of current config.
2025-01-20 02:53:02.291 [main] INFO  Node - [192.168.1.101]:5701 [dev] [5.4.0] Using Multicast discovery
2025-01-20 02:53:02.295 [main] WARN  CPSubsystem - [192.168.1.101]:5701 [dev] [5.4.0] CP Subsystem is not enabled. CP data structures will operate in UNSAFE mode! Please note that UNSAFE mode will not provide strong consistency guarantees.
2025-01-20 02:53:02.551 [main] INFO  Diagnostics - [192.168.1.101]:5701 [dev] [5.4.0] Diagnostics disabled. To enable add -Dhazelcast.diagnostics.enabled=true to the JVM arguments.
2025-01-20 02:53:02.556 [main] INFO  LifecycleService - [192.168.1.101]:5701 [dev] [5.4.0] [192.168.1.101]:5701 is STARTING
2025-01-20 02:53:04.427 [main] INFO  ClusterService - [192.168.1.101]:5701 [dev] [5.4.0] 

Members {size:1, ver:1} [
	Member [192.168.1.101]:5701 - 0a35d60f-c289-457c-bddd-a668c12ce016 this
]

2025-01-20 02:53:04.455 [main] INFO  LifecycleService - [192.168.1.101]:5701 [dev] [5.4.0] [192.168.1.101]:5701 is STARTED
2025-01-20 02:53:05.519 [main] INFO  DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-20 02:53:05.569 [main] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-20 02:53:05.582 [main] INFO  EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-01-20 02:53:05.737 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-20 02:53:05.793 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-20 02:53:05.801 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 02:53:05.837 [main] INFO  DiscoveryClient - Disable delta property : false
2025-01-20 02:53:05.837 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
2025-01-20 02:53:05.837 [main] INFO  DiscoveryClient - Force full registry fetch : false
2025-01-20 02:53:05.838 [main] INFO  DiscoveryClient - Application is null : false
2025-01-20 02:53:05.838 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
2025-01-20 02:53:05.838 [main] INFO  DiscoveryClient - Application version is -1: true
2025-01-20 02:53:05.838 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-20 02:53:06.001 [main] INFO  DiscoveryClient - The response status is 200
2025-01-20 02:53:06.008 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-20 02:53:06.011 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-20 02:53:06.016 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1737330786015 with initial instances count: 5
2025-01-20 02:53:06.020 [main] INFO  EurekaServiceRegistry - Registering application ANALYTICS-SERVICE with eureka with status UP
2025-01-20 02:53:06.021 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1737330786021, current=UP, previous=STARTING]
2025-01-20 02:53:06.023 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-20 02:53:06.023 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085: registering service...
2025-01-20 02:53:06.039 [main] INFO  TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-20 02:53:06.040 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8085
2025-01-20 02:53:06.068 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085 - registration status: 204
2025-01-20 02:53:06.305 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patient-email-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patient-email
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 02:53:06.373 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 02:53:06.479 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 02:53:06.479 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 02:53:06.479 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737330786478
2025-01-20 02:53:06.484 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Subscribed to topic(s): patient-email-topic
2025-01-20 02:53:06.490 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patient-email-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patient-email
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 02:53:06.491 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 02:53:06.502 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 02:53:06.502 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 02:53:06.502 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737330786502
2025-01-20 02:53:06.503 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Subscribed to topic(s): patient-email-topic
2025-01-20 02:53:06.505 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patient-email-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patient-email
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 02:53:06.506 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 02:53:06.517 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 02:53:06.518 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 02:53:06.518 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737330786517
2025-01-20 02:53:06.519 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Subscribed to topic(s): patient-email-topic
2025-01-20 02:53:06.521 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patients-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patients
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 02:53:06.522 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 02:53:06.536 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 02:53:06.536 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 02:53:06.536 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737330786536
2025-01-20 02:53:06.536 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-4, groupId=patients] Subscribed to topic(s): patient-stats
2025-01-20 02:53:06.538 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patients-5
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patients
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 02:53:06.539 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 02:53:06.550 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 02:53:06.551 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 02:53:06.551 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737330786550
2025-01-20 02:53:06.552 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-5, groupId=patients] Subscribed to topic(s): patient-stats
2025-01-20 02:53:06.555 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patients-6
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patients
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 02:53:06.555 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 02:53:06.566 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 02:53:06.567 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 02:53:06.568 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737330786566
2025-01-20 02:53:06.569 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-6, groupId=patients] Subscribed to topic(s): patient-stats
2025-01-20 02:53:06.573 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-reports-7
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = reports
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 02:53:06.573 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 02:53:06.585 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 02:53:06.585 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 02:53:06.585 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737330786585
2025-01-20 02:53:06.586 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-7, groupId=reports] Subscribed to topic(s): report-stats
2025-01-20 02:53:06.588 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-reports-8
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = reports
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 02:53:06.588 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 02:53:06.612 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 02:53:06.612 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 02:53:06.613 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737330786612
2025-01-20 02:53:06.613 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-8, groupId=reports] Subscribed to topic(s): report-stats
2025-01-20 02:53:06.615 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-reports-9
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = reports
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 02:53:06.617 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 02:53:06.633 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 02:53:06.633 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 02:53:06.633 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737330786633
2025-01-20 02:53:06.634 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-9, groupId=reports] Subscribed to topic(s): report-stats
2025-01-20 02:53:06.661 [main] INFO  AnalyticsServiceApplication - Started AnalyticsServiceApplication in 10.591 seconds (process running for 14.694)
2025-01-20 02:53:07.593 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  Metadata - [Consumer clientId=consumer-patients-6, groupId=patients] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 02:53:07.593 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  Metadata - [Consumer clientId=consumer-reports-9, groupId=reports] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 02:53:07.593 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  Metadata - [Consumer clientId=consumer-reports-8, groupId=reports] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 02:53:07.593 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  Metadata - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 02:53:07.593 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  Metadata - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 02:53:07.593 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  Metadata - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 02:53:07.593 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  Metadata - [Consumer clientId=consumer-patients-5, groupId=patients] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 02:53:07.593 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata - [Consumer clientId=consumer-reports-7, groupId=reports] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 02:53:07.593 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata - [Consumer clientId=consumer-patients-4, groupId=patients] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 02:53:07.608 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 02:53:07.608 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 02:53:07.608 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 02:53:07.608 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 02:53:07.608 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 02:53:07.609 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 02:53:07.609 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 02:53:07.609 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 02:53:07.614 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 02:53:07.615 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] (Re-)joining group
2025-01-20 02:53:07.615 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] (Re-)joining group
2025-01-20 02:53:07.615 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] (Re-)joining group
2025-01-20 02:53:07.616 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] (Re-)joining group
2025-01-20 02:53:07.618 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] (Re-)joining group
2025-01-20 02:53:07.618 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] (Re-)joining group
2025-01-20 02:53:07.619 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] (Re-)joining group
2025-01-20 02:53:07.619 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] (Re-)joining group
2025-01-20 02:53:07.620 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] (Re-)joining group
2025-01-20 02:53:07.761 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Request joining group due to: need to re-join with the given member-id: consumer-patients-5-1cadbd91-0ed5-48e4-bc3b-8cb369ade240
2025-01-20 02:53:07.761 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Request joining group due to: need to re-join with the given member-id: consumer-patients-6-7e8ded25-1192-43c6-a962-aa47954842b1
2025-01-20 02:53:07.761 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Request joining group due to: need to re-join with the given member-id: consumer-patient-email-1-1e499d95-94c9-428d-8d7b-5d1be5ed9729
2025-01-20 02:53:07.761 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Request joining group due to: need to re-join with the given member-id: consumer-patient-email-3-89f621cf-8980-4958-8d01-f4d64075e331
2025-01-20 02:53:07.761 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] (Re-)joining group
2025-01-20 02:53:07.761 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Request joining group due to: need to re-join with the given member-id: consumer-reports-9-4f0685a2-bd5a-41ae-bdd6-6b4c2d2f9376
2025-01-20 02:53:07.762 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] (Re-)joining group
2025-01-20 02:53:07.762 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] (Re-)joining group
2025-01-20 02:53:07.761 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] (Re-)joining group
2025-01-20 02:53:07.773 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Request joining group due to: need to re-join with the given member-id: consumer-patient-email-2-5704b200-e077-4148-ba24-c920321beaed
2025-01-20 02:53:07.774 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Request joining group due to: need to re-join with the given member-id: consumer-reports-8-1841166b-95b3-47dc-bf43-72cc6ed7b09c
2025-01-20 02:53:07.761 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] (Re-)joining group
2025-01-20 02:53:07.775 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] (Re-)joining group
2025-01-20 02:53:07.776 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] (Re-)joining group
2025-01-20 02:53:07.786 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Request joining group due to: need to re-join with the given member-id: consumer-patients-4-b1d0008a-0394-4b2d-b34a-f0ec45a70cf9
2025-01-20 02:53:07.787 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] (Re-)joining group
2025-01-20 02:53:07.790 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Request joining group due to: need to re-join with the given member-id: consumer-reports-7-da2eccb4-160b-4e12-81e1-eedc5a8c6c1b
2025-01-20 02:53:07.791 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] (Re-)joining group
2025-01-20 02:53:07.875 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Successfully joined group with generation Generation{generationId=3, memberId='consumer-reports-9-4f0685a2-bd5a-41ae-bdd6-6b4c2d2f9376', protocol='range'}
2025-01-20 02:53:07.875 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Successfully joined group with generation Generation{generationId=3, memberId='consumer-reports-8-1841166b-95b3-47dc-bf43-72cc6ed7b09c', protocol='range'}
2025-01-20 02:53:07.886 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Successfully joined group with generation Generation{generationId=3, memberId='consumer-patients-4-b1d0008a-0394-4b2d-b34a-f0ec45a70cf9', protocol='range'}
2025-01-20 02:53:07.887 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Successfully joined group with generation Generation{generationId=3, memberId='consumer-patients-6-7e8ded25-1192-43c6-a962-aa47954842b1', protocol='range'}
2025-01-20 02:53:07.886 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Successfully joined group with generation Generation{generationId=3, memberId='consumer-patients-5-1cadbd91-0ed5-48e4-bc3b-8cb369ade240', protocol='range'}
2025-01-20 02:53:07.899 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Finished assignment for group at generation 3: {consumer-patients-4-b1d0008a-0394-4b2d-b34a-f0ec45a70cf9=Assignment(partitions=[patient-stats-0]), consumer-patients-5-1cadbd91-0ed5-48e4-bc3b-8cb369ade240=Assignment(partitions=[]), consumer-patients-6-7e8ded25-1192-43c6-a962-aa47954842b1=Assignment(partitions=[])}
2025-01-20 02:53:07.899 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Finished assignment for group at generation 3: {consumer-reports-9-4f0685a2-bd5a-41ae-bdd6-6b4c2d2f9376=Assignment(partitions=[]), consumer-reports-8-1841166b-95b3-47dc-bf43-72cc6ed7b09c=Assignment(partitions=[report-stats-0])}
2025-01-20 02:53:07.906 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Successfully joined group with generation Generation{generationId=1, memberId='consumer-patient-email-2-5704b200-e077-4148-ba24-c920321beaed', protocol='range'}
2025-01-20 02:53:07.906 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Successfully joined group with generation Generation{generationId=1, memberId='consumer-patient-email-3-89f621cf-8980-4958-8d01-f4d64075e331', protocol='range'}
2025-01-20 02:53:07.908 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Successfully joined group with generation Generation{generationId=1, memberId='consumer-patient-email-1-1e499d95-94c9-428d-8d7b-5d1be5ed9729', protocol='range'}
2025-01-20 02:53:07.909 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Finished assignment for group at generation 1: {consumer-patient-email-1-1e499d95-94c9-428d-8d7b-5d1be5ed9729=Assignment(partitions=[patient-email-topic-0]), consumer-patient-email-3-89f621cf-8980-4958-8d01-f4d64075e331=Assignment(partitions=[]), consumer-patient-email-2-5704b200-e077-4148-ba24-c920321beaed=Assignment(partitions=[])}
2025-01-20 02:53:07.946 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=3, memberId='consumer-reports-8-1841166b-95b3-47dc-bf43-72cc6ed7b09c', protocol='range'}
2025-01-20 02:53:07.946 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=3, memberId='consumer-reports-9-4f0685a2-bd5a-41ae-bdd6-6b4c2d2f9376', protocol='range'}
2025-01-20 02:53:07.946 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2025-01-20 02:53:07.947 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] (Re-)joining group
2025-01-20 02:53:07.946 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2025-01-20 02:53:07.947 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] (Re-)joining group
2025-01-20 02:53:07.956 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Successfully joined group with generation Generation{generationId=4, memberId='consumer-reports-7-da2eccb4-160b-4e12-81e1-eedc5a8c6c1b', protocol='range'}
2025-01-20 02:53:07.957 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Successfully joined group with generation Generation{generationId=4, memberId='consumer-reports-8-1841166b-95b3-47dc-bf43-72cc6ed7b09c', protocol='range'}
2025-01-20 02:53:07.959 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Successfully joined group with generation Generation{generationId=4, memberId='consumer-reports-9-4f0685a2-bd5a-41ae-bdd6-6b4c2d2f9376', protocol='range'}
2025-01-20 02:53:07.960 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Finished assignment for group at generation 4: {consumer-reports-9-4f0685a2-bd5a-41ae-bdd6-6b4c2d2f9376=Assignment(partitions=[]), consumer-reports-7-da2eccb4-160b-4e12-81e1-eedc5a8c6c1b=Assignment(partitions=[report-stats-0]), consumer-reports-8-1841166b-95b3-47dc-bf43-72cc6ed7b09c=Assignment(partitions=[])}
2025-01-20 02:53:08.019 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Successfully synced group in generation Generation{generationId=4, memberId='consumer-reports-7-da2eccb4-160b-4e12-81e1-eedc5a8c6c1b', protocol='range'}
2025-01-20 02:53:08.020 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Successfully synced group in generation Generation{generationId=3, memberId='consumer-patients-4-b1d0008a-0394-4b2d-b34a-f0ec45a70cf9', protocol='range'}
2025-01-20 02:53:08.020 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Successfully synced group in generation Generation{generationId=1, memberId='consumer-patient-email-2-5704b200-e077-4148-ba24-c920321beaed', protocol='range'}
2025-01-20 02:53:08.020 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Successfully synced group in generation Generation{generationId=3, memberId='consumer-patients-6-7e8ded25-1192-43c6-a962-aa47954842b1', protocol='range'}
2025-01-20 02:53:08.020 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Notifying assignor about the new Assignment(partitions=[])
2025-01-20 02:53:08.020 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Notifying assignor about the new Assignment(partitions=[report-stats-0])
2025-01-20 02:53:08.020 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Notifying assignor about the new Assignment(partitions=[])
2025-01-20 02:53:08.020 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Adding newly assigned partitions: 
2025-01-20 02:53:08.020 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patients-6, groupId=patients] Adding newly assigned partitions: 
2025-01-20 02:53:08.020 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Notifying assignor about the new Assignment(partitions=[patient-stats-0])
2025-01-20 02:53:08.021 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Successfully synced group in generation Generation{generationId=1, memberId='consumer-patient-email-1-1e499d95-94c9-428d-8d7b-5d1be5ed9729', protocol='range'}
2025-01-20 02:53:08.021 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Successfully synced group in generation Generation{generationId=1, memberId='consumer-patient-email-3-89f621cf-8980-4958-8d01-f4d64075e331', protocol='range'}
2025-01-20 02:53:08.021 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Successfully synced group in generation Generation{generationId=3, memberId='consumer-patients-5-1cadbd91-0ed5-48e4-bc3b-8cb369ade240', protocol='range'}
2025-01-20 02:53:08.022 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Notifying assignor about the new Assignment(partitions=[])
2025-01-20 02:53:08.022 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Notifying assignor about the new Assignment(partitions=[])
2025-01-20 02:53:08.022 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Notifying assignor about the new Assignment(partitions=[patient-email-topic-0])
2025-01-20 02:53:08.022 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Adding newly assigned partitions: 
2025-01-20 02:53:08.022 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patients-5, groupId=patients] Adding newly assigned partitions: 
2025-01-20 02:53:08.023 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Successfully synced group in generation Generation{generationId=4, memberId='consumer-reports-8-1841166b-95b3-47dc-bf43-72cc6ed7b09c', protocol='range'}
2025-01-20 02:53:08.023 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  KafkaMessageListenerContainer - patient-email: partitions assigned: []
2025-01-20 02:53:08.023 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  KafkaMessageListenerContainer - patient-email: partitions assigned: []
2025-01-20 02:53:08.023 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  KafkaMessageListenerContainer - patients: partitions assigned: []
2025-01-20 02:53:08.024 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Notifying assignor about the new Assignment(partitions=[])
2025-01-20 02:53:08.024 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-reports-8, groupId=reports] Adding newly assigned partitions: 
2025-01-20 02:53:08.023 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  KafkaMessageListenerContainer - patients: partitions assigned: []
2025-01-20 02:53:08.024 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  KafkaMessageListenerContainer - reports: partitions assigned: []
2025-01-20 02:53:08.026 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Successfully synced group in generation Generation{generationId=4, memberId='consumer-reports-9-4f0685a2-bd5a-41ae-bdd6-6b4c2d2f9376', protocol='range'}
2025-01-20 02:53:08.026 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Notifying assignor about the new Assignment(partitions=[])
2025-01-20 02:53:08.027 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-reports-9, groupId=reports] Adding newly assigned partitions: 
2025-01-20 02:53:08.027 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  KafkaMessageListenerContainer - reports: partitions assigned: []
2025-01-20 02:53:08.036 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Adding newly assigned partitions: patient-email-topic-0
2025-01-20 02:53:08.036 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-reports-7, groupId=reports] Adding newly assigned partitions: report-stats-0
2025-01-20 02:53:08.036 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patients-4, groupId=patients] Adding newly assigned partitions: patient-stats-0
2025-01-20 02:53:08.061 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Found no committed offset for partition patient-email-topic-0
2025-01-20 02:53:08.065 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerUtils - Setting offset for partition report-stats-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[asaf:9092 (id: 0 rack: null)], epoch=0}}
2025-01-20 02:53:08.065 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerUtils - Setting offset for partition patient-stats-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[asaf:9092 (id: 0 rack: null)], epoch=0}}
2025-01-20 02:53:08.066 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - reports: partitions assigned: [report-stats-0]
2025-01-20 02:53:08.067 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - patients: partitions assigned: [patient-stats-0]
2025-01-20 02:53:08.124 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  SubscriptionState - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Resetting offset for partition patient-email-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[asaf:9092 (id: 0 rack: null)], epoch=0}}.
2025-01-20 02:53:08.125 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  KafkaMessageListenerContainer - patient-email: partitions assigned: [patient-email-topic-0]
2025-01-20 02:53:44.475 [hz.hazelcast-instance.HealthMonitor] INFO  HealthMonitor - [192.168.1.101]:5701 [dev] [5.4.0] The HealthMonitor has detected a high load on the system. For more detailed information,
enable Diagnostics by adding the property -Dhazelcast.diagnostics.enabled=true
2025-01-20 02:53:44.490 [hz.hazelcast-instance.HealthMonitor] INFO  HealthMonitor - [192.168.1.101]:5701 [dev] [5.4.0] processors=8, physical.memory.total=7.9G, physical.memory.free=101.7M, swap.space.total=0, swap.space.free=0, heap.memory.used=48.5M, heap.memory.free=85.4M, heap.memory.total=134.0M, heap.memory.max=2.0G, heap.memory.used/total=36.17%, heap.memory.used/max=2.41%, minor.gc.count=19, minor.gc.time=114ms, major.gc.count=0, major.gc.time=0ms, load.process=0.00%, load.system=74.70%, load.systemAverage=n/a thread.count=107, thread.peakCount=107, cluster.timeDiff=0, event.q.size=0, executor.q.async.size=0, executor.q.client.size=0, executor.q.client.query.size=0, executor.q.client.blocking.size=0, executor.q.query.size=0, executor.q.scheduled.size=0, executor.q.io.size=0, executor.q.system.size=0, executor.q.operations.size=0, executor.q.priorityOperation.size=0, operations.completed.count=1, executor.q.mapLoad.size=0, executor.q.mapLoadAllKeys.size=0, executor.q.cluster.size=0, executor.q.response.size=0, operations.running.count=0, operations.pending.invocations.percentage=0.00%, operations.pending.invocations.count=0, proxy.count=0, clientEndpoint.count=0, connection.active.count=0, client.connection.count=0, connection.count=0
2025-01-20 02:58:05.856 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 03:00:01.899 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  PartitionStateManager - [192.168.1.101]:5701 [dev] [5.4.0] Initializing cluster partition table arrangement...
2025-01-20 03:00:02.007 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TRACE AnalyticsConsumer - Patient stats successfully cached.
2025-01-20 03:00:02.007 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TRACE AnalyticsConsumer - Report stats successfully cached.
2025-01-20 03:02:07.620 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 03:02:07.620 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 03:02:07.635 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 03:02:07.650 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 03:02:07.666 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 03:02:07.666 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 03:02:07.682 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 03:02:07.992 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 03:02:07.992 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 03:03:05.876 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 03:08:05.892 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 03:12:07.447 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 03:12:07.447 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 03:12:07.463 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 03:12:07.478 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 03:12:07.509 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 03:12:07.509 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 03:12:07.571 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 03:12:07.632 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 03:12:07.742 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 03:13:05.909 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 03:18:05.922 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 03:23:05.929 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 03:28:05.932 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 03:30:05.523 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TRACE AnalyticsConsumer - Report stats successfully cached.
2025-01-20 03:30:05.523 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TRACE AnalyticsConsumer - Patient stats successfully cached.
2025-01-20 03:33:05.935 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 03:38:05.938 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 03:43:05.945 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 03:48:05.963 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 03:53:05.965 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 03:58:05.969 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 04:00:00.296 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TRACE AnalyticsConsumer - Patient stats successfully cached.
2025-01-20 04:00:00.459 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TRACE AnalyticsConsumer - Report stats successfully cached.
2025-01-20 04:03:05.983 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 04:05:24.117 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] TRACE AnalyticsServiceImpl - Entering sendPatientSatisfactionSurvey method with email: tribalchief1899@gmail.com
2025-01-20 04:05:24.135 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] TRACE MailService - Entering sendEmail method in MailService
2025-01-20 04:05:24.139 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  MailService - Entering sendEmail method with parameters - to: tribalchief1899@gmail.com, subject: Patient Satisfaction Survey, text length: 230
2025-01-20 04:05:24.174 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  MailService - Sending email to tribalchief1899@gmail.com with subject Patient Satisfaction Survey
2025-01-20 04:05:37.324 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  MailService - Email sent successfully to tribalchief1899@gmail.com
2025-01-20 04:05:37.324 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] TRACE MailService - Exiting sendEmail method in MailService
2025-01-20 04:05:37.325 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  AnalyticsServiceImpl - Survey email sent to: tribalchief1899@gmail.com
2025-01-20 04:05:37.325 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] TRACE AnalyticsServiceImpl - Exiting sendPatientSatisfactionSurvey method in AnalyticsServiceImpl
2025-01-20 04:08:06.003 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 04:09:08.839 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] TRACE AnalyticsServiceImpl - Entering sendPatientSatisfactionSurvey method with email: tribalchief1899@gmail.com
2025-01-20 04:09:08.839 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] TRACE MailService - Entering sendEmail method in MailService
2025-01-20 04:09:08.840 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  MailService - Entering sendEmail method with parameters - to: tribalchief1899@gmail.com, subject: Patient Satisfaction Survey, text length: 230
2025-01-20 04:09:08.840 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  MailService - Sending email to tribalchief1899@gmail.com with subject Patient Satisfaction Survey
2025-01-20 04:09:21.650 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  MailService - Email sent successfully to tribalchief1899@gmail.com
2025-01-20 04:09:21.650 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] TRACE MailService - Exiting sendEmail method in MailService
2025-01-20 04:09:21.650 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  AnalyticsServiceImpl - Survey email sent to: tribalchief1899@gmail.com
2025-01-20 04:09:21.650 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] TRACE AnalyticsServiceImpl - Exiting sendPatientSatisfactionSurvey method in AnalyticsServiceImpl
2025-01-20 04:13:06.011 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 04:18:06.021 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 04:23:06.050 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 04:28:06.660 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 04:30:00.655 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TRACE AnalyticsConsumer - Report stats successfully cached.
2025-01-20 04:30:00.655 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TRACE AnalyticsConsumer - Patient stats successfully cached.
2025-01-20 04:33:06.721 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 04:38:06.758 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 04:39:31.385 [http-nio-8085-exec-1] INFO  [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-20 04:39:31.392 [http-nio-8085-exec-1] INFO  DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-01-20 04:39:31.679 [http-nio-8085-exec-1] INFO  DispatcherServlet - Completed initialization in 285 ms
2025-01-20 04:39:32.410 [http-nio-8085-exec-1] TRACE AnalyticsController - Entering getPatientChart method in AnalyticsController class
2025-01-20 04:39:32.411 [http-nio-8085-exec-1] TRACE AnalyticsServiceImpl - Entering getPatientChart method in AnalyticsServiceImpl
2025-01-20 04:39:32.551 [http-nio-8085-exec-1] TRACE AnalyticsServiceImpl - Exiting getPatientChart method in AnalyticsServiceImpl
2025-01-20 04:39:32.555 [http-nio-8085-exec-1] TRACE ChartService - Starting chart generation with title: Weekly Patient Density
2025-01-20 04:39:32.557 [http-nio-8085-exec-1] DEBUG ChartService - Creating dataset for chart.
2025-01-20 04:39:32.577 [http-nio-8085-exec-1] DEBUG ChartService - Creating chart with title: Weekly Patient Density
2025-01-20 04:39:33.144 [http-nio-8085-exec-1] DEBUG ChartService - Customizing chart appearance.
2025-01-20 04:39:33.144 [http-nio-8085-exec-1] DEBUG ChartService - Writing chart to PNG byte array.
2025-01-20 04:39:33.576 [http-nio-8085-exec-1] TRACE ChartService - Chart generation completed successfully.
2025-01-20 04:39:33.578 [http-nio-8085-exec-1] TRACE AnalyticsController - Exiting getPatientChart method in AnalyticsController class
2025-01-20 04:41:09.299 [http-nio-8085-exec-3] TRACE AnalyticsController - Entering getReportChart method in AnalyticsController class
2025-01-20 04:41:09.299 [http-nio-8085-exec-3] TRACE AnalyticsServiceImpl - Entering getReportChart method in AnalyticsServiceImpl
2025-01-20 04:41:09.301 [http-nio-8085-exec-3] TRACE AnalyticsServiceImpl - Exiting getReportChart method in AnalyticsServiceImpl
2025-01-20 04:41:09.302 [http-nio-8085-exec-3] TRACE ChartService - Starting chart generation with title: Weekly Report Density
2025-01-20 04:41:09.302 [http-nio-8085-exec-3] DEBUG ChartService - Creating dataset for chart.
2025-01-20 04:41:09.302 [http-nio-8085-exec-3] DEBUG ChartService - Creating chart with title: Weekly Report Density
2025-01-20 04:41:09.303 [http-nio-8085-exec-3] DEBUG ChartService - Customizing chart appearance.
2025-01-20 04:41:09.304 [http-nio-8085-exec-3] DEBUG ChartService - Writing chart to PNG byte array.
2025-01-20 04:41:09.410 [http-nio-8085-exec-3] TRACE ChartService - Chart generation completed successfully.
2025-01-20 04:41:09.410 [http-nio-8085-exec-3] TRACE AnalyticsController - Exiting getReportChart method in AnalyticsController class
2025-01-20 04:43:06.795 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 04:46:59.860 [http-nio-8085-exec-5] TRACE AnalyticsController - Entering getReportChart method in AnalyticsController class
2025-01-20 04:46:59.862 [http-nio-8085-exec-5] TRACE AnalyticsServiceImpl - Entering getReportChart method in AnalyticsServiceImpl
2025-01-20 04:46:59.878 [http-nio-8085-exec-5] TRACE AnalyticsServiceImpl - Exiting getReportChart method in AnalyticsServiceImpl
2025-01-20 04:46:59.879 [http-nio-8085-exec-5] TRACE ChartService - Starting chart generation with title: Weekly Report Density
2025-01-20 04:46:59.880 [http-nio-8085-exec-5] DEBUG ChartService - Creating dataset for chart.
2025-01-20 04:46:59.880 [http-nio-8085-exec-5] DEBUG ChartService - Creating chart with title: Weekly Report Density
2025-01-20 04:46:59.887 [http-nio-8085-exec-5] DEBUG ChartService - Customizing chart appearance.
2025-01-20 04:46:59.887 [http-nio-8085-exec-5] DEBUG ChartService - Writing chart to PNG byte array.
2025-01-20 04:46:59.949 [http-nio-8085-exec-5] TRACE ChartService - Chart generation completed successfully.
2025-01-20 04:46:59.949 [http-nio-8085-exec-5] TRACE AnalyticsController - Exiting getReportChart method in AnalyticsController class
2025-01-20 04:47:40.729 [SpringApplicationShutdownHook] INFO  EurekaServiceRegistry - Unregistering application ANALYTICS-SERVICE with eureka with status DOWN
2025-01-20 04:47:40.734 [SpringApplicationShutdownHook] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1737337660734, current=DOWN, previous=UP]
2025-01-20 04:47:40.746 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085: registering service...
2025-01-20 04:47:40.939 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Member consumer-patients-5-1cadbd91-0ed5-48e4-bc3b-8cb369ade240 sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 04:47:40.939 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Member consumer-patient-email-2-5704b200-e077-4148-ba24-c920321beaed sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 04:47:40.939 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Member consumer-patients-6-7e8ded25-1192-43c6-a962-aa47954842b1 sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 04:47:40.938 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Member consumer-patient-email-3-89f621cf-8980-4958-8d01-f4d64075e331 sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 04:47:40.938 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Member consumer-reports-9-4f0685a2-bd5a-41ae-bdd6-6b4c2d2f9376 sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 04:47:40.938 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Member consumer-reports-8-1841166b-95b3-47dc-bf43-72cc6ed7b09c sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 04:47:40.946 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Revoke previously assigned partitions patient-email-topic-0
2025-01-20 04:47:40.946 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patients-4, groupId=patients] Revoke previously assigned partitions patient-stats-0
2025-01-20 04:47:40.946 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-reports-7, groupId=reports] Revoke previously assigned partitions report-stats-0
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-5, groupId=patients] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-8, groupId=reports] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-6, groupId=patients] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 04:47:40.955 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.955 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 04:47:40.954 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-9, groupId=reports] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 04:47:40.961 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - reports: partitions revoked: [report-stats-0]
2025-01-20 04:47:40.961 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  KafkaMessageListenerContainer - patient-email: partitions revoked: [patient-email-topic-0]
2025-01-20 04:47:40.970 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Member consumer-patient-email-1-1e499d95-94c9-428d-8d7b-5d1be5ed9729 sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 04:47:40.971 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.971 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.971 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 04:47:40.961 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - patients: partitions revoked: [patient-stats-0]
2025-01-20 04:47:40.976 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Member consumer-reports-7-da2eccb4-160b-4e12-81e1-eedc5a8c6c1b sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 04:47:40.976 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Member consumer-patients-4-b1d0008a-0394-4b2d-b34a-f0ec45a70cf9 sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 04:47:40.976 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.976 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.976 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.976 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-7, groupId=reports] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 04:47:40.976 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.978 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-4, groupId=patients] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 04:47:40.987 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.987 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.988 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.989 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.989 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.989 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.990 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.990 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.992 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.992 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.993 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.993 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.995 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.995 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.997 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.997 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.997 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:40.997 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 04:47:41.070 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085 - registration status: 204
2025-01-20 04:47:42.870 [DiscoveryClient-CacheRefreshExecutor-0] INFO  HttpRequestRetryExec - Recoverable I/O exception (org.apache.hc.core5.http.NoHttpResponseException) caught when processing request to {}->http://localhost:8761
2025-01-20 04:47:43.103 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 04:47:43.103 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 04:47:43.103 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 04:47:43.103 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 04:47:43.103 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 04:47:43.103 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 04:47:43.103 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 04:47:43.103 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 04:47:43.103 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 04:47:43.103 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 04:47:43.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 04:47:43.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 04:47:43.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 04:47:43.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 04:47:43.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 04:47:43.104 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 04:47:43.105 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 04:47:43.105 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 04:47:43.105 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 04:47:43.105 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 04:47:43.105 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 04:47:43.105 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 04:47:43.111 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 04:47:43.114 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 04:47:43.192 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patient-email-2 unregistered
2025-01-20 04:47:43.192 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-reports-8 unregistered
2025-01-20 04:47:43.193 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-reports-9 unregistered
2025-01-20 04:47:43.193 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patient-email-3 unregistered
2025-01-20 04:47:43.193 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patients-5 unregistered
2025-01-20 04:47:43.193 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patients-6 unregistered
2025-01-20 04:47:43.198 [DiscoveryClient-CacheRefreshExecutor-0] INFO  RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connection reset stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connection reset
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:328)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:355)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:808)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:966)
	at org.apache.hc.core5.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:149)
	at org.apache.hc.core5.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:280)
	at org.apache.hc.core5.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:247)
	at org.apache.hc.core5.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:54)
	at org.apache.hc.core5.http.impl.io.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:304)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:175)
	at org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:218)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$InternalConnectionEndpoint.execute(PoolingHttpClientConnectionManager.java:717)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.execute(InternalExecRuntime.java:216)
	at org.apache.hc.client5.http.impl.classic.MainClientExec.execute(MainClientExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:188)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more

2025-01-20 04:47:43.206 [DiscoveryClient-CacheRefreshExecutor-0] WARN  RetryableEurekaHttpClient - Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connection reset
2025-01-20 04:47:43.211 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  KafkaMessageListenerContainer - reports: Consumer stopped
2025-01-20 04:47:43.211 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  KafkaMessageListenerContainer - reports: Consumer stopped
2025-01-20 04:47:43.211 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  KafkaMessageListenerContainer - patients: Consumer stopped
2025-01-20 04:47:43.211 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  KafkaMessageListenerContainer - patient-email: Consumer stopped
2025-01-20 04:47:43.211 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  KafkaMessageListenerContainer - patients: Consumer stopped
2025-01-20 04:47:43.212 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  KafkaMessageListenerContainer - patient-email: Consumer stopped
2025-01-20 04:47:43.287 [DiscoveryClient-CacheRefreshExecutor-0] INFO  RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getDelta(RestTemplateEurekaHttpClient.java:155)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.lambda$connectSocket$0(PlainConnectionSocketFactory.java:91)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:569)
	at org.apache.hc.client5.http.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:90)
	at org.apache.hc.client5.http.socket.ConnectionSocketFactory.connectSocket(ConnectionSocketFactory.java:123)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:189)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 23 more

2025-01-20 04:47:43.287 [DiscoveryClient-CacheRefreshExecutor-0] WARN  RetryableEurekaHttpClient - Request execution failed with message: I/O error on GET request for "http://localhost:8761/eureka/apps/delta": Connect to http://localhost:8761 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: no further information
2025-01-20 04:47:43.289 [DiscoveryClient-CacheRefreshExecutor-0] INFO  DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1079)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:960)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1475)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1442)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)

2025-01-20 04:47:43.543 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 04:47:43.543 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 04:47:43.544 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 04:47:43.544 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 04:47:43.544 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 04:47:43.544 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 04:47:43.544 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 04:47:43.544 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 04:47:43.547 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 04:47:43.547 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 04:47:43.547 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 04:47:43.547 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 04:47:43.553 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patient-email-1 unregistered
2025-01-20 04:47:43.553 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  KafkaMessageListenerContainer - patient-email: Consumer stopped
2025-01-20 04:47:43.556 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-reports-7 unregistered
2025-01-20 04:47:43.556 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - reports: Consumer stopped
2025-01-20 04:47:43.556 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patients-4 unregistered
2025-01-20 04:47:43.557 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - patients: Consumer stopped
2025-01-20 04:47:45.282 [SpringApplicationShutdownHook] INFO  DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-20 04:47:48.014 [DiscoveryClient-HeartbeatExecutor-0] INFO  RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:297)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)

2025-01-20 04:47:48.014 [DiscoveryClient-HeartbeatExecutor-0] WARN  RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-01-20 04:47:48.032 [DiscoveryClient-HeartbeatExecutor-0] INFO  RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:297)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.sendHeartBeat(RestTemplateEurekaHttpClient.java:99)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:842)

2025-01-20 04:47:48.032 [DiscoveryClient-HeartbeatExecutor-0] WARN  RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-01-20 04:47:48.032 [DiscoveryClient-HeartbeatExecutor-0] ERROR DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:837) [eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1401) [eureka-client-2.0.2.jar:2.0.2]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) [?:?]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) [?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) [?:?]
	at java.base/java.lang.Thread.run(Thread.java:842) [?:?]
2025-01-20 04:47:48.302 [SpringApplicationShutdownHook] INFO  DiscoveryClient - Unregistering ...
2025-01-20 04:47:48.312 [SpringApplicationShutdownHook] INFO  RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:297)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:842)

2025-01-20 04:47:48.312 [SpringApplicationShutdownHook] WARN  RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-01-20 04:47:48.312 [SpringApplicationShutdownHook] ERROR DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.2.jar:4.1.2]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.2.jar:4.1.2]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195) ~[spring-context-6.1.12.jar:6.1.12]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156) ~[spring-context-6.1.12.jar:6.1.12]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.3.3.jar:3.3.3]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102) ~[spring-context-6.1.12.jar:6.1.12]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.3.3.jar:3.3.3]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) [?:?]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) [spring-boot-3.3.3.jar:3.3.3]
	at java.base/java.lang.Thread.run(Thread.java:842) [?:?]
2025-01-20 04:47:48.331 [SpringApplicationShutdownHook] INFO  DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-20 23:00:02.843 [main] INFO  AnalyticsServiceApplication - Starting AnalyticsServiceApplication using Java 17.0.11 with PID 17600 (C:\Users\omera\Desktop\laboratory-reporting-project\backend\analytics-service\target\classes started by asaf in C:\Users\omera\Desktop\laboratory-reporting-project)
2025-01-20 23:00:02.850 [main] DEBUG AnalyticsServiceApplication - Running with Spring Boot v3.3.3, Spring v6.1.12
2025-01-20 23:00:02.850 [main] INFO  AnalyticsServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-20 23:00:02.884 [main] INFO  ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2025-01-20 23:00:02.884 [main] INFO  ConfigServerConfigDataLoader - Located environment: name=analytics-service, profiles=[default], label=null, version=03ffa4158fd88ccb2e7c9ad4657371a18bb400ab, state=null
2025-01-20 23:00:04.047 [main] INFO  GenericScope - BeanFactory id=5ae5a929-18f8-33ea-809b-e061c9c22bd0
2025-01-20 23:00:04.207 [main] WARN  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-20 23:00:04.210 [main] WARN  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-20 23:00:04.505 [main] INFO  TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-20 23:00:04.518 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-20 23:00:04.522 [main] INFO  StandardService - Starting service [Tomcat]
2025-01-20 23:00:04.522 [main] INFO  StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-01-20 23:00:04.596 [main] INFO  [/] - Initializing Spring embedded WebApplicationContext
2025-01-20 23:00:04.597 [main] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1711 ms
2025-01-20 23:00:05.196 [main] WARN  HazelcastInstanceFactory - Hazelcast is starting in a Java modular environment (Java 9 and newer) but without proper access to required Java packages. Use additional Java arguments to provide Hazelcast access to Java internal API. The internal API access is used to get the best performance results. Arguments to be used:
 --add-modules java.se --add-exports java.base/jdk.internal.ref=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.management/sun.management=ALL-UNNAMED --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED
2025-01-20 23:00:05.581 [main] WARN  AddressPicker - [LOCAL] [dev] [5.4.0] Ignoring TCP_KEEPCOUNT. It seems your JDK does not support jdk.net.ExtendedSocketOptions on this OS. Try upgrading to the latest JDK or check with your JDK vendor.Alternatively, on Linux, configure tcp_keepalive_probes in the kernel (affecting default keep-alive configuration for all sockets): For more info see https://tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/. If this isn't dealt with, idle connections could be closed prematurely.
2025-01-20 23:00:05.582 [main] WARN  AddressPicker - [LOCAL] [dev] [5.4.0] Ignoring TCP_KEEPIDLE. It seems your JDK does not support jdk.net.ExtendedSocketOptions on this OS. Try upgrading to the latest JDK or check with your JDK vendor.Alternatively, on Linux, configure tcp_keepalive_time in the kernel (affecting default keep-alive configuration for all sockets): For more info see https://tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/. If this isn't dealt with, idle connections could be closed prematurely.
2025-01-20 23:00:05.582 [main] WARN  AddressPicker - [LOCAL] [dev] [5.4.0] Ignoring TCP_KEEPINTERVAL. It seems your JDK does not support jdk.net.ExtendedSocketOptions on this OS. Try upgrading to the latest JDK or check with your JDK vendor.Alternatively, on Linux, configure tcp_keepalive_intvl in the kernel (affecting default keep-alive configuration for all sockets): For more info see https://tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/. If this isn't dealt with, idle connections could be closed prematurely.
2025-01-20 23:00:05.621 [main] INFO  logo - [192.168.1.101]:5701 [dev] [5.4.0] 
	o    o     o     o---o   o--o o      o---o     o     o----o o--o--o
	|    |    / \       /         |     /         / \    |         |   
	o----o       o     o   o----o |    o             o   o----o    |   
	|    |  *     \   /           |     \       *     \       |    |   
	o    o *       o o---o   o--o o----o o---o *       o o----o    o   
2025-01-20 23:00:05.622 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] Copyright (c) 2008-2024, Hazelcast, Inc. All Rights Reserved.
2025-01-20 23:00:05.622 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] Hazelcast Platform 5.4.0 (20240415) starting at [192.168.1.101]:5701
2025-01-20 23:00:05.622 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] Cluster name: dev
2025-01-20 23:00:05.623 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] Integrity Checker is disabled. Fail-fast on corrupted executables will not be performed. For more information, see the documentation for Integrity Checker.
2025-01-20 23:00:05.627 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] The Jet engine is disabled.
To enable the Jet engine on the members, do one of the following:
  - Change member config using Java API: config.getJetConfig().setEnabled(true)
  - Change XML/YAML configuration property: Set hazelcast.jet.enabled to true
  - Add system property: -Dhz.jet.enabled=true (for Hazelcast embedded, works only when loading config via Config.load)
  - Add environment variable: HZ_JET_ENABLED=true (recommended when running container image. For Hazelcast embedded, works only when loading config via Config.load)
2025-01-20 23:00:06.455 [main] INFO  security - [192.168.1.101]:5701 [dev] [5.4.0] Enable DEBUG/FINE log level for log category com.hazelcast.system.security  or use -Dhazelcast.security.recommendations system property to see security recommendations and the status of current config.
2025-01-20 23:00:06.545 [main] INFO  Node - [192.168.1.101]:5701 [dev] [5.4.0] Using Multicast discovery
2025-01-20 23:00:06.549 [main] WARN  CPSubsystem - [192.168.1.101]:5701 [dev] [5.4.0] CP Subsystem is not enabled. CP data structures will operate in UNSAFE mode! Please note that UNSAFE mode will not provide strong consistency guarantees.
2025-01-20 23:00:06.761 [main] INFO  Diagnostics - [192.168.1.101]:5701 [dev] [5.4.0] Diagnostics disabled. To enable add -Dhazelcast.diagnostics.enabled=true to the JVM arguments.
2025-01-20 23:00:06.766 [main] INFO  LifecycleService - [192.168.1.101]:5701 [dev] [5.4.0] [192.168.1.101]:5701 is STARTING
2025-01-20 23:00:08.974 [main] INFO  ClusterService - [192.168.1.101]:5701 [dev] [5.4.0] 

Members {size:1, ver:1} [
	Member [192.168.1.101]:5701 - c3c12e5e-6e26-4a38-a8ed-f6514e6cbfc1 this
]

2025-01-20 23:00:08.991 [main] INFO  LifecycleService - [192.168.1.101]:5701 [dev] [5.4.0] [192.168.1.101]:5701 is STARTED
2025-01-20 23:00:10.028 [main] INFO  DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-20 23:00:10.085 [main] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-20 23:00:10.093 [main] INFO  EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-01-20 23:00:10.197 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-20 23:00:10.236 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-20 23:00:10.242 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 23:00:10.273 [main] INFO  DiscoveryClient - Disable delta property : false
2025-01-20 23:00:10.273 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
2025-01-20 23:00:10.273 [main] INFO  DiscoveryClient - Force full registry fetch : false
2025-01-20 23:00:10.273 [main] INFO  DiscoveryClient - Application is null : false
2025-01-20 23:00:10.274 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
2025-01-20 23:00:10.274 [main] INFO  DiscoveryClient - Application version is -1: true
2025-01-20 23:00:10.274 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-20 23:00:10.389 [main] INFO  DiscoveryClient - The response status is 200
2025-01-20 23:00:10.391 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-20 23:00:10.393 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-20 23:00:10.397 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1737403210397 with initial instances count: 5
2025-01-20 23:00:10.400 [main] INFO  EurekaServiceRegistry - Registering application ANALYTICS-SERVICE with eureka with status UP
2025-01-20 23:00:10.401 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1737403210401, current=UP, previous=STARTING]
2025-01-20 23:00:10.403 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-20 23:00:10.403 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085: registering service...
2025-01-20 23:00:10.420 [main] INFO  TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-20 23:00:10.421 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8085
2025-01-20 23:00:10.449 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085 - registration status: 204
2025-01-20 23:00:10.662 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patient-email-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patient-email
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:00:10.722 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:00:10.821 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:00:10.821 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:00:10.821 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403210820
2025-01-20 23:00:10.826 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Subscribed to topic(s): patient-email-topic
2025-01-20 23:00:10.838 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patient-email-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patient-email
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:00:10.838 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:00:10.853 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:00:10.853 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:00:10.853 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403210853
2025-01-20 23:00:10.860 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Subscribed to topic(s): patient-email-topic
2025-01-20 23:00:10.863 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patient-email-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patient-email
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:00:10.863 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:00:10.875 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:00:10.875 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:00:10.875 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403210875
2025-01-20 23:00:10.875 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Subscribed to topic(s): patient-email-topic
2025-01-20 23:00:10.878 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patients-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patients
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:00:10.879 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:00:10.901 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:00:10.901 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:00:10.901 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403210901
2025-01-20 23:00:10.902 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-4, groupId=patients] Subscribed to topic(s): patient-stats
2025-01-20 23:00:10.905 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patients-5
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patients
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:00:10.905 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:00:10.917 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:00:10.917 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:00:10.917 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403210917
2025-01-20 23:00:10.918 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-5, groupId=patients] Subscribed to topic(s): patient-stats
2025-01-20 23:00:10.920 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patients-6
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patients
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:00:10.920 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:00:10.931 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:00:10.932 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:00:10.932 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403210931
2025-01-20 23:00:10.932 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-6, groupId=patients] Subscribed to topic(s): patient-stats
2025-01-20 23:00:10.935 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-reports-7
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = reports
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:00:10.936 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:00:10.949 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:00:10.949 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:00:10.950 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403210949
2025-01-20 23:00:10.950 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-7, groupId=reports] Subscribed to topic(s): report-stats
2025-01-20 23:00:10.953 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-reports-8
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = reports
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:00:10.954 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:00:10.967 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:00:10.969 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:00:10.969 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403210967
2025-01-20 23:00:10.970 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-8, groupId=reports] Subscribed to topic(s): report-stats
2025-01-20 23:00:10.975 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-reports-9
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = reports
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:00:10.977 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:00:10.988 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:00:10.988 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:00:10.988 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403210988
2025-01-20 23:00:10.989 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-9, groupId=reports] Subscribed to topic(s): report-stats
2025-01-20 23:00:11.030 [main] INFO  AnalyticsServiceApplication - Started AnalyticsServiceApplication in 9.815 seconds (process running for 13.87)
2025-01-20 23:00:11.280 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:11.280 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:11.281 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:11.280 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:11.280 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:11.280 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:11.281 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:11.281 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:11.282 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.287 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.387 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:11.388 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.388 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.388 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:11.388 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.389 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.391 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:11.391 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.391 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.395 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:11.395 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.395 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.396 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:11.396 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.396 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.400 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:11.401 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.401 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.403 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:11.403 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.403 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.404 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:11.404 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.404 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.415 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:11.416 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.416 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.501 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:11.501 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:11.501 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:11.501 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.501 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.501 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.501 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.501 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.501 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.517 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:11.517 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:11.517 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.517 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.517 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.517 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.532 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:11.532 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.532 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.563 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:11.563 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:11.563 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.563 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.563 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.563 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.579 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:11.579 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.579 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.703 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:11.703 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.703 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.719 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:11.719 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:11.719 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.719 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.719 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.720 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.735 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:11.735 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.735 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.751 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:11.751 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:11.751 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:11.751 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.751 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.751 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.751 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.751 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.751 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.783 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:11.783 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.783 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:11.838 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:11.838 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:11.838 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:12.068 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:12.069 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:12.069 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:12.101 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:12.101 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:12.101 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:12.132 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:12.133 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:12.133 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:12.148 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:12.149 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:12.149 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:12.165 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:12.165 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:12.165 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:12.180 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:12.181 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:12.181 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:12.228 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:12.229 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:12.229 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:12.245 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:12.245 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:12.245 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:12.293 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:12.294 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:12.294 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:12.843 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:12.843 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:12.843 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:12.858 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:12.859 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:12.859 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:12.921 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:12.921 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:12.921 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:12.983 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:12.983 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:12.983 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:13.047 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:13.047 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:13.047 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:13.063 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:13.063 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:13.063 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:13.127 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:13.127 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:13.127 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:13.174 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:13.174 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:13.174 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:13.237 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:13.237 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:13.237 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:13.792 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:13.792 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:13.792 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:13.900 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:13.900 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:13.901 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:13.973 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:13.973 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:13.973 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:14.010 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:14.011 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:14.011 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:14.015 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:14.015 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:14.015 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:14.063 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:14.064 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:14.064 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:14.182 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:14.183 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:14.183 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:14.231 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:14.231 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:14.232 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:14.247 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:14.247 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:14.248 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:14.608 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:14.609 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:14.609 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:14.872 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:14.873 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:14.873 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:14.918 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:14.918 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:14.918 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:15.027 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:15.027 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:15.028 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:15.043 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:15.043 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:15.044 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:15.074 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:15.074 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:15.074 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:15.104 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:15.105 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:15.105 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:15.198 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:15.198 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:15.198 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:15.292 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:15.293 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:15.293 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:15.663 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:15.663 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:15.664 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:15.866 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:15.866 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:15.867 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:15.912 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:15.912 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:15.912 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:15.975 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:15.975 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:15.976 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:16.036 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:16.037 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:16.037 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:16.082 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:16.082 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:16.083 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:16.083 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:16.083 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:16.083 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:16.208 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:16.208 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:16.208 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:16.303 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:16.304 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:16.304 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:16.599 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:16.599 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:16.600 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:16.849 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:16.849 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:16.849 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:16.910 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:16.910 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:16.910 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:17.004 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:17.005 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:17.005 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:17.069 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:17.069 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:17.070 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:17.083 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:17.084 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:17.084 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:17.121 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:17.121 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:17.121 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:17.175 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:17.175 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:17.175 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:17.219 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:17.220 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:17.220 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:17.562 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:17.562 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:17.562 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:17.889 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:17.889 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:17.890 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:17.906 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:17.906 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:17.906 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:18.031 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:18.031 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:18.031 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:18.031 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:18.031 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:18.031 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:18.076 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:18.077 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:18.077 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:18.091 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:18.092 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:18.092 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:18.186 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:18.186 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:18.186 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:18.232 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:18.232 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:18.232 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:18.620 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:18.620 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:18.620 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:18.837 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:18.838 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:18.838 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:18.884 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:18.884 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:18.884 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:18.961 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:18.961 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:18.961 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:19.007 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:19.008 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:19.008 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:19.086 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:19.086 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:19.086 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:19.117 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:19.117 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:19.117 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:19.147 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:19.147 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:19.147 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:19.242 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:19.242 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:19.242 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:19.633 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:19.634 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:19.634 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:19.774 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:19.775 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:19.775 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:19.853 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:19.853 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:19.853 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:19.900 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:19.900 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:19.900 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:19.993 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:19.993 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:19.994 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:20.086 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:20.086 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:20.086 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:20.146 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:20.146 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:20.146 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:20.154 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:20.155 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:20.155 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:20.258 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 23:00:20.258 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:20.258 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:20.538 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:00:20.539 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:20.539 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] WARN  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:20.706 [SpringApplicationShutdownHook] INFO  EurekaServiceRegistry - Unregistering application ANALYTICS-SERVICE with eureka with status DOWN
2025-01-20 23:00:20.706 [SpringApplicationShutdownHook] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1737403220706, current=DOWN, previous=UP]
2025-01-20 23:00:20.706 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085: registering service...
2025-01-20 23:00:20.711 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:00:20.712 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-01-20 23:00:20.712 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] WARN  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2025-01-20 23:00:20.717 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.717 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-9, groupId=reports] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-8, groupId=reports] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-6, groupId=patients] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:00:20.717 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-7, groupId=reports] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-4, groupId=patients] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:00:20.718 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.719 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.719 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-5, groupId=patients] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:00:20.719 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.719 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.719 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:00:20.719 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.719 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.719 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.724 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:00:20.729 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085 - registration status: 204
2025-01-20 23:00:20.743 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:00:20.743 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:00:20.744 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:00:20.745 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:00:20.760 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patient-email-1 unregistered
2025-01-20 23:00:20.760 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  KafkaMessageListenerContainer - patient-email: Consumer stopped
2025-01-20 23:00:20.761 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-reports-8 unregistered
2025-01-20 23:00:20.761 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  KafkaMessageListenerContainer - reports: Consumer stopped
2025-01-20 23:00:20.761 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-reports-7 unregistered
2025-01-20 23:00:20.761 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - reports: Consumer stopped
2025-01-20 23:00:20.762 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patient-email-2 unregistered
2025-01-20 23:00:20.762 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  KafkaMessageListenerContainer - patient-email: Consumer stopped
2025-01-20 23:00:20.763 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-reports-9 unregistered
2025-01-20 23:00:20.763 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  KafkaMessageListenerContainer - reports: Consumer stopped
2025-01-20 23:00:20.763 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patients-5 unregistered
2025-01-20 23:00:20.763 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  KafkaMessageListenerContainer - patients: Consumer stopped
2025-01-20 23:00:20.763 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patients-6 unregistered
2025-01-20 23:00:20.763 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  KafkaMessageListenerContainer - patients: Consumer stopped
2025-01-20 23:00:20.764 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patients-4 unregistered
2025-01-20 23:00:20.764 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - patients: Consumer stopped
2025-01-20 23:00:20.764 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patient-email-3 unregistered
2025-01-20 23:00:20.764 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  KafkaMessageListenerContainer - patient-email: Consumer stopped
2025-01-20 23:00:22.214 [SpringApplicationShutdownHook] INFO  DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-20 23:00:25.223 [SpringApplicationShutdownHook] INFO  DiscoveryClient - Unregistering ...
2025-01-20 23:00:25.240 [SpringApplicationShutdownHook] INFO  RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:297)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:842)

2025-01-20 23:00:25.241 [SpringApplicationShutdownHook] WARN  RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-01-20 23:00:25.245 [SpringApplicationShutdownHook] INFO  RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:297)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:842)

2025-01-20 23:00:25.245 [SpringApplicationShutdownHook] WARN  RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-01-20 23:00:25.245 [SpringApplicationShutdownHook] ERROR DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.2.jar:4.1.2]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.2.jar:4.1.2]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195) ~[spring-context-6.1.12.jar:6.1.12]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156) ~[spring-context-6.1.12.jar:6.1.12]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.3.3.jar:3.3.3]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102) ~[spring-context-6.1.12.jar:6.1.12]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.3.3.jar:3.3.3]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) [?:?]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) [spring-boot-3.3.3.jar:3.3.3]
	at java.base/java.lang.Thread.run(Thread.java:842) [?:?]
2025-01-20 23:00:25.259 [SpringApplicationShutdownHook] INFO  DiscoveryClient - Completed shut down of DiscoveryClient
2025-01-20 23:04:55.116 [main] INFO  AnalyticsServiceApplication - Starting AnalyticsServiceApplication using Java 17.0.11 with PID 20800 (C:\Users\omera\Desktop\laboratory-reporting-project\backend\analytics-service\target\classes started by asaf in C:\Users\omera\Desktop\laboratory-reporting-project)
2025-01-20 23:04:55.125 [main] DEBUG AnalyticsServiceApplication - Running with Spring Boot v3.3.3, Spring v6.1.12
2025-01-20 23:04:55.126 [main] INFO  AnalyticsServiceApplication - No active profile set, falling back to 1 default profile: "default"
2025-01-20 23:04:55.182 [main] INFO  ConfigServerConfigDataLoader - Fetching config from server at : http://localhost:8888
2025-01-20 23:04:55.183 [main] INFO  ConfigServerConfigDataLoader - Located environment: name=analytics-service, profiles=[default], label=null, version=03ffa4158fd88ccb2e7c9ad4657371a18bb400ab, state=null
2025-01-20 23:04:56.528 [main] INFO  GenericScope - BeanFactory id=5ae5a929-18f8-33ea-809b-e061c9c22bd0
2025-01-20 23:04:56.717 [main] WARN  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2025-01-20 23:04:56.719 [main] WARN  PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2025-01-20 23:04:57.048 [main] INFO  TomcatWebServer - Tomcat initialized with port 8085 (http)
2025-01-20 23:04:57.063 [main] INFO  Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
2025-01-20 23:04:57.068 [main] INFO  StandardService - Starting service [Tomcat]
2025-01-20 23:04:57.069 [main] INFO  StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2025-01-20 23:04:57.148 [main] INFO  [/] - Initializing Spring embedded WebApplicationContext
2025-01-20 23:04:57.149 [main] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1962 ms
2025-01-20 23:04:57.900 [main] WARN  HazelcastInstanceFactory - Hazelcast is starting in a Java modular environment (Java 9 and newer) but without proper access to required Java packages. Use additional Java arguments to provide Hazelcast access to Java internal API. The internal API access is used to get the best performance results. Arguments to be used:
 --add-modules java.se --add-exports java.base/jdk.internal.ref=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.management/sun.management=ALL-UNNAMED --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED
2025-01-20 23:04:58.516 [main] WARN  AddressPicker - [LOCAL] [dev] [5.4.0] Ignoring TCP_KEEPCOUNT. It seems your JDK does not support jdk.net.ExtendedSocketOptions on this OS. Try upgrading to the latest JDK or check with your JDK vendor.Alternatively, on Linux, configure tcp_keepalive_probes in the kernel (affecting default keep-alive configuration for all sockets): For more info see https://tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/. If this isn't dealt with, idle connections could be closed prematurely.
2025-01-20 23:04:58.517 [main] WARN  AddressPicker - [LOCAL] [dev] [5.4.0] Ignoring TCP_KEEPIDLE. It seems your JDK does not support jdk.net.ExtendedSocketOptions on this OS. Try upgrading to the latest JDK or check with your JDK vendor.Alternatively, on Linux, configure tcp_keepalive_time in the kernel (affecting default keep-alive configuration for all sockets): For more info see https://tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/. If this isn't dealt with, idle connections could be closed prematurely.
2025-01-20 23:04:58.517 [main] WARN  AddressPicker - [LOCAL] [dev] [5.4.0] Ignoring TCP_KEEPINTERVAL. It seems your JDK does not support jdk.net.ExtendedSocketOptions on this OS. Try upgrading to the latest JDK or check with your JDK vendor.Alternatively, on Linux, configure tcp_keepalive_intvl in the kernel (affecting default keep-alive configuration for all sockets): For more info see https://tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/. If this isn't dealt with, idle connections could be closed prematurely.
2025-01-20 23:04:58.557 [main] INFO  logo - [192.168.1.101]:5701 [dev] [5.4.0] 
	o    o     o     o---o   o--o o      o---o     o     o----o o--o--o
	|    |    / \       /         |     /         / \    |         |   
	o----o       o     o   o----o |    o             o   o----o    |   
	|    |  *     \   /           |     \       *     \       |    |   
	o    o *       o o---o   o--o o----o o---o *       o o----o    o   
2025-01-20 23:04:58.557 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] Copyright (c) 2008-2024, Hazelcast, Inc. All Rights Reserved.
2025-01-20 23:04:58.558 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] Hazelcast Platform 5.4.0 (20240415) starting at [192.168.1.101]:5701
2025-01-20 23:04:58.558 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] Cluster name: dev
2025-01-20 23:04:58.559 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] Integrity Checker is disabled. Fail-fast on corrupted executables will not be performed. For more information, see the documentation for Integrity Checker.
2025-01-20 23:04:58.565 [main] INFO  system - [192.168.1.101]:5701 [dev] [5.4.0] The Jet engine is disabled.
To enable the Jet engine on the members, do one of the following:
  - Change member config using Java API: config.getJetConfig().setEnabled(true)
  - Change XML/YAML configuration property: Set hazelcast.jet.enabled to true
  - Add system property: -Dhz.jet.enabled=true (for Hazelcast embedded, works only when loading config via Config.load)
  - Add environment variable: HZ_JET_ENABLED=true (recommended when running container image. For Hazelcast embedded, works only when loading config via Config.load)
2025-01-20 23:04:59.543 [main] INFO  security - [192.168.1.101]:5701 [dev] [5.4.0] Enable DEBUG/FINE log level for log category com.hazelcast.system.security  or use -Dhazelcast.security.recommendations system property to see security recommendations and the status of current config.
2025-01-20 23:04:59.633 [main] INFO  Node - [192.168.1.101]:5701 [dev] [5.4.0] Using Multicast discovery
2025-01-20 23:04:59.637 [main] WARN  CPSubsystem - [192.168.1.101]:5701 [dev] [5.4.0] CP Subsystem is not enabled. CP data structures will operate in UNSAFE mode! Please note that UNSAFE mode will not provide strong consistency guarantees.
2025-01-20 23:04:59.856 [main] INFO  Diagnostics - [192.168.1.101]:5701 [dev] [5.4.0] Diagnostics disabled. To enable add -Dhazelcast.diagnostics.enabled=true to the JVM arguments.
2025-01-20 23:04:59.863 [main] INFO  LifecycleService - [192.168.1.101]:5701 [dev] [5.4.0] [192.168.1.101]:5701 is STARTING
2025-01-20 23:05:02.045 [main] INFO  ClusterService - [192.168.1.101]:5701 [dev] [5.4.0] 

Members {size:1, ver:1} [
	Member [192.168.1.101]:5701 - 8a122262-8527-4554-82b3-bbff2e19358b this
]

2025-01-20 23:05:02.087 [main] INFO  LifecycleService - [192.168.1.101]:5701 [dev] [5.4.0] [192.168.1.101]:5701 is STARTED
2025-01-20 23:05:03.171 [main] INFO  DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-01-20 23:05:03.219 [main] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-01-20 23:05:03.226 [main] INFO  EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-01-20 23:05:03.323 [main] INFO  InstanceInfoFactory - Setting initial instance status as: STARTING
2025-01-20 23:05:03.367 [main] INFO  DiscoveryClient - Initializing Eureka in region us-east-1
2025-01-20 23:05:03.371 [main] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 23:05:03.402 [main] INFO  DiscoveryClient - Disable delta property : false
2025-01-20 23:05:03.402 [main] INFO  DiscoveryClient - Single vip registry refresh property : null
2025-01-20 23:05:03.402 [main] INFO  DiscoveryClient - Force full registry fetch : false
2025-01-20 23:05:03.402 [main] INFO  DiscoveryClient - Application is null : false
2025-01-20 23:05:03.402 [main] INFO  DiscoveryClient - Registered Applications size is zero : true
2025-01-20 23:05:03.403 [main] INFO  DiscoveryClient - Application version is -1: true
2025-01-20 23:05:03.403 [main] INFO  DiscoveryClient - Getting all instance registry info from the eureka server
2025-01-20 23:05:03.533 [main] INFO  DiscoveryClient - The response status is 200
2025-01-20 23:05:03.536 [main] INFO  DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-01-20 23:05:03.538 [main] INFO  InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-01-20 23:05:03.542 [main] INFO  DiscoveryClient - Discovery Client initialized at timestamp 1737403503542 with initial instances count: 5
2025-01-20 23:05:03.546 [main] INFO  EurekaServiceRegistry - Registering application ANALYTICS-SERVICE with eureka with status UP
2025-01-20 23:05:03.546 [main] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1737403503546, current=UP, previous=STARTING]
2025-01-20 23:05:03.548 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085: registering service...
2025-01-20 23:05:03.548 [main] INFO  Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
2025-01-20 23:05:03.564 [main] INFO  TomcatWebServer - Tomcat started on port 8085 (http) with context path '/'
2025-01-20 23:05:03.564 [main] INFO  EurekaAutoServiceRegistration - Updating port to 8085
2025-01-20 23:05:03.588 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085 - registration status: 204
2025-01-20 23:05:03.823 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patient-email-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patient-email
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:05:03.893 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:05:03.995 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:05:03.996 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:05:03.996 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403503993
2025-01-20 23:05:04.002 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Subscribed to topic(s): patient-email-topic
2025-01-20 23:05:04.010 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patient-email-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patient-email
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:05:04.011 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:05:04.021 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:05:04.021 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:05:04.022 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403504021
2025-01-20 23:05:04.022 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Subscribed to topic(s): patient-email-topic
2025-01-20 23:05:04.024 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patient-email-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patient-email
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:05:04.024 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:05:04.034 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:05:04.035 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:05:04.035 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403504034
2025-01-20 23:05:04.035 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Subscribed to topic(s): patient-email-topic
2025-01-20 23:05:04.038 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patients-4
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patients
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:05:04.038 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:05:04.050 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:05:04.051 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:05:04.051 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403504050
2025-01-20 23:05:04.052 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-4, groupId=patients] Subscribed to topic(s): patient-stats
2025-01-20 23:05:04.056 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patients-5
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patients
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:05:04.057 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:05:04.070 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:05:04.070 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:05:04.070 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403504070
2025-01-20 23:05:04.071 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-5, groupId=patients] Subscribed to topic(s): patient-stats
2025-01-20 23:05:04.072 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-patients-6
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = patients
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:05:04.073 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:05:04.081 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:05:04.082 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:05:04.083 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403504081
2025-01-20 23:05:04.083 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-6, groupId=patients] Subscribed to topic(s): patient-stats
2025-01-20 23:05:04.086 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-reports-7
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = reports
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:05:04.087 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:05:04.097 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:05:04.098 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:05:04.099 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403504097
2025-01-20 23:05:04.100 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-7, groupId=reports] Subscribed to topic(s): report-stats
2025-01-20 23:05:04.103 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-reports-8
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = reports
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:05:04.104 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:05:04.114 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:05:04.114 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:05:04.114 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403504114
2025-01-20 23:05:04.115 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-8, groupId=reports] Subscribed to topic(s): report-stats
2025-01-20 23:05:04.117 [main] INFO  ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-reports-9
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = reports
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-01-20 23:05:04.118 [main] INFO  KafkaMetricsCollector - initializing Kafka metrics collector
2025-01-20 23:05:04.124 [main] INFO  AppInfoParser - Kafka version: 3.7.1
2025-01-20 23:05:04.124 [main] INFO  AppInfoParser - Kafka commitId: e2494e6ffb89f828
2025-01-20 23:05:04.124 [main] INFO  AppInfoParser - Kafka startTimeMs: 1737403504124
2025-01-20 23:05:04.125 [main] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-9, groupId=reports] Subscribed to topic(s): report-stats
2025-01-20 23:05:04.153 [main] INFO  AnalyticsServiceApplication - Started AnalyticsServiceApplication in 10.861 seconds (process running for 14.926)
2025-01-20 23:05:04.644 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  Metadata - [Consumer clientId=consumer-patients-5, groupId=patients] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 23:05:04.644 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  Metadata - [Consumer clientId=consumer-reports-9, groupId=reports] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 23:05:04.644 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata - [Consumer clientId=consumer-reports-7, groupId=reports] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 23:05:04.644 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  Metadata - [Consumer clientId=consumer-patients-6, groupId=patients] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 23:05:04.644 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  Metadata - [Consumer clientId=consumer-reports-8, groupId=reports] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 23:05:04.644 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  Metadata - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 23:05:04.645 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  Metadata - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 23:05:04.646 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  Metadata - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 23:05:04.644 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata - [Consumer clientId=consumer-patients-4, groupId=patients] Cluster ID: DhPAyrJESYSqPFOSNVoyDg
2025-01-20 23:05:04.649 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 23:05:04.651 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 23:05:04.652 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 23:05:04.653 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 23:05:04.655 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 23:05:04.655 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 23:05:04.656 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] (Re-)joining group
2025-01-20 23:05:04.656 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 23:05:04.657 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] (Re-)joining group
2025-01-20 23:05:04.657 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] (Re-)joining group
2025-01-20 23:05:04.657 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] (Re-)joining group
2025-01-20 23:05:04.657 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] (Re-)joining group
2025-01-20 23:05:04.657 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] (Re-)joining group
2025-01-20 23:05:04.658 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 23:05:04.658 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] (Re-)joining group
2025-01-20 23:05:04.659 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Discovered group coordinator asaf:9092 (id: 2147483647 rack: null)
2025-01-20 23:05:04.659 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] (Re-)joining group
2025-01-20 23:05:04.661 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] (Re-)joining group
2025-01-20 23:05:04.730 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Request joining group due to: need to re-join with the given member-id: consumer-patient-email-1-0f45f830-3f9e-405f-a31a-88e25f62286d
2025-01-20 23:05:04.730 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Request joining group due to: need to re-join with the given member-id: consumer-patients-6-a2244595-c767-466d-8dcd-ae1a150ca427
2025-01-20 23:05:04.730 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Request joining group due to: need to re-join with the given member-id: consumer-reports-9-c0b2fe78-1384-45e5-84bd-7a250ee39094
2025-01-20 23:05:04.730 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] (Re-)joining group
2025-01-20 23:05:04.730 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Request joining group due to: need to re-join with the given member-id: consumer-patients-4-8ffb1fd1-2ec6-4b14-8cbe-3565abe04990
2025-01-20 23:05:04.730 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] (Re-)joining group
2025-01-20 23:05:04.730 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Request joining group due to: need to re-join with the given member-id: consumer-patient-email-3-90b33a79-ca0d-487c-85d4-2ef502ff7c01
2025-01-20 23:05:04.730 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] (Re-)joining group
2025-01-20 23:05:04.730 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] (Re-)joining group
2025-01-20 23:05:04.731 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] (Re-)joining group
2025-01-20 23:05:04.730 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Request joining group due to: need to re-join with the given member-id: consumer-patients-5-59abac15-fb9c-4fd9-92a9-5ab5f67dc4c2
2025-01-20 23:05:04.731 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] (Re-)joining group
2025-01-20 23:05:04.730 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Request joining group due to: need to re-join with the given member-id: consumer-reports-7-f1ec6423-1e5f-4ddc-b861-81ff50a9e26d
2025-01-20 23:05:04.730 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Request joining group due to: need to re-join with the given member-id: consumer-patient-email-2-eff35a8b-efd7-497d-8128-1f2312efc728
2025-01-20 23:05:04.732 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] (Re-)joining group
2025-01-20 23:05:04.732 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] (Re-)joining group
2025-01-20 23:05:04.735 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Request joining group due to: need to re-join with the given member-id: consumer-reports-8-0c1686e1-2965-4c22-b333-a7f565ad0569
2025-01-20 23:05:04.735 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] (Re-)joining group
2025-01-20 23:05:04.750 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Successfully joined group with generation Generation{generationId=5, memberId='consumer-patients-4-8ffb1fd1-2ec6-4b14-8cbe-3565abe04990', protocol='range'}
2025-01-20 23:05:04.754 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Successfully joined group with generation Generation{generationId=5, memberId='consumer-patients-5-59abac15-fb9c-4fd9-92a9-5ab5f67dc4c2', protocol='range'}
2025-01-20 23:05:04.754 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Successfully joined group with generation Generation{generationId=5, memberId='consumer-patients-6-a2244595-c767-466d-8dcd-ae1a150ca427', protocol='range'}
2025-01-20 23:05:04.759 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Successfully joined group with generation Generation{generationId=3, memberId='consumer-patient-email-1-0f45f830-3f9e-405f-a31a-88e25f62286d', protocol='range'}
2025-01-20 23:05:04.760 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Successfully joined group with generation Generation{generationId=3, memberId='consumer-patient-email-3-90b33a79-ca0d-487c-85d4-2ef502ff7c01', protocol='range'}
2025-01-20 23:05:04.762 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Successfully joined group with generation Generation{generationId=3, memberId='consumer-patient-email-2-eff35a8b-efd7-497d-8128-1f2312efc728', protocol='range'}
2025-01-20 23:05:04.766 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Successfully joined group with generation Generation{generationId=6, memberId='consumer-reports-9-c0b2fe78-1384-45e5-84bd-7a250ee39094', protocol='range'}
2025-01-20 23:05:04.767 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Successfully joined group with generation Generation{generationId=6, memberId='consumer-reports-8-0c1686e1-2965-4c22-b333-a7f565ad0569', protocol='range'}
2025-01-20 23:05:04.767 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Successfully joined group with generation Generation{generationId=6, memberId='consumer-reports-7-f1ec6423-1e5f-4ddc-b861-81ff50a9e26d', protocol='range'}
2025-01-20 23:05:04.778 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Finished assignment for group at generation 5: {consumer-patients-4-8ffb1fd1-2ec6-4b14-8cbe-3565abe04990=Assignment(partitions=[patient-stats-0]), consumer-patients-5-59abac15-fb9c-4fd9-92a9-5ab5f67dc4c2=Assignment(partitions=[]), consumer-patients-6-a2244595-c767-466d-8dcd-ae1a150ca427=Assignment(partitions=[])}
2025-01-20 23:05:04.778 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Finished assignment for group at generation 6: {consumer-reports-9-c0b2fe78-1384-45e5-84bd-7a250ee39094=Assignment(partitions=[]), consumer-reports-8-0c1686e1-2965-4c22-b333-a7f565ad0569=Assignment(partitions=[]), consumer-reports-7-f1ec6423-1e5f-4ddc-b861-81ff50a9e26d=Assignment(partitions=[report-stats-0])}
2025-01-20 23:05:04.778 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Finished assignment for group at generation 3: {consumer-patient-email-1-0f45f830-3f9e-405f-a31a-88e25f62286d=Assignment(partitions=[patient-email-topic-0]), consumer-patient-email-2-eff35a8b-efd7-497d-8128-1f2312efc728=Assignment(partitions=[]), consumer-patient-email-3-90b33a79-ca0d-487c-85d4-2ef502ff7c01=Assignment(partitions=[])}
2025-01-20 23:05:04.832 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Successfully synced group in generation Generation{generationId=6, memberId='consumer-reports-7-f1ec6423-1e5f-4ddc-b861-81ff50a9e26d', protocol='range'}
2025-01-20 23:05:04.832 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Successfully synced group in generation Generation{generationId=3, memberId='consumer-patient-email-3-90b33a79-ca0d-487c-85d4-2ef502ff7c01', protocol='range'}
2025-01-20 23:05:04.832 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Successfully synced group in generation Generation{generationId=5, memberId='consumer-patients-4-8ffb1fd1-2ec6-4b14-8cbe-3565abe04990', protocol='range'}
2025-01-20 23:05:04.833 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Notifying assignor about the new Assignment(partitions=[])
2025-01-20 23:05:04.833 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Notifying assignor about the new Assignment(partitions=[report-stats-0])
2025-01-20 23:05:04.833 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Notifying assignor about the new Assignment(partitions=[patient-stats-0])
2025-01-20 23:05:04.833 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Adding newly assigned partitions: 
2025-01-20 23:05:04.833 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Successfully synced group in generation Generation{generationId=6, memberId='consumer-reports-9-c0b2fe78-1384-45e5-84bd-7a250ee39094', protocol='range'}
2025-01-20 23:05:04.833 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Successfully synced group in generation Generation{generationId=3, memberId='consumer-patient-email-2-eff35a8b-efd7-497d-8128-1f2312efc728', protocol='range'}
2025-01-20 23:05:04.834 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Notifying assignor about the new Assignment(partitions=[])
2025-01-20 23:05:04.834 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Successfully synced group in generation Generation{generationId=6, memberId='consumer-reports-8-0c1686e1-2965-4c22-b333-a7f565ad0569', protocol='range'}
2025-01-20 23:05:04.834 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-reports-9, groupId=reports] Adding newly assigned partitions: 
2025-01-20 23:05:04.835 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Notifying assignor about the new Assignment(partitions=[])
2025-01-20 23:05:04.835 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Notifying assignor about the new Assignment(partitions=[])
2025-01-20 23:05:04.835 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Successfully synced group in generation Generation{generationId=3, memberId='consumer-patient-email-1-0f45f830-3f9e-405f-a31a-88e25f62286d', protocol='range'}
2025-01-20 23:05:04.835 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-reports-8, groupId=reports] Adding newly assigned partitions: 
2025-01-20 23:05:04.835 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Adding newly assigned partitions: 
2025-01-20 23:05:04.835 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Notifying assignor about the new Assignment(partitions=[patient-email-topic-0])
2025-01-20 23:05:04.835 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  KafkaMessageListenerContainer - reports: partitions assigned: []
2025-01-20 23:05:04.835 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  KafkaMessageListenerContainer - patient-email: partitions assigned: []
2025-01-20 23:05:04.836 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  KafkaMessageListenerContainer - reports: partitions assigned: []
2025-01-20 23:05:04.835 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  KafkaMessageListenerContainer - patient-email: partitions assigned: []
2025-01-20 23:05:04.837 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Successfully synced group in generation Generation{generationId=5, memberId='consumer-patients-6-a2244595-c767-466d-8dcd-ae1a150ca427', protocol='range'}
2025-01-20 23:05:04.837 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Notifying assignor about the new Assignment(partitions=[])
2025-01-20 23:05:04.837 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Successfully synced group in generation Generation{generationId=5, memberId='consumer-patients-5-59abac15-fb9c-4fd9-92a9-5ab5f67dc4c2', protocol='range'}
2025-01-20 23:05:04.837 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patients-6, groupId=patients] Adding newly assigned partitions: 
2025-01-20 23:05:04.837 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  KafkaMessageListenerContainer - patients: partitions assigned: []
2025-01-20 23:05:04.838 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Notifying assignor about the new Assignment(partitions=[])
2025-01-20 23:05:04.838 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patients-5, groupId=patients] Adding newly assigned partitions: 
2025-01-20 23:05:04.838 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  KafkaMessageListenerContainer - patients: partitions assigned: []
2025-01-20 23:05:04.843 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Adding newly assigned partitions: patient-email-topic-0
2025-01-20 23:05:04.843 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-reports-7, groupId=reports] Adding newly assigned partitions: report-stats-0
2025-01-20 23:05:04.843 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patients-4, groupId=patients] Adding newly assigned partitions: patient-stats-0
2025-01-20 23:05:04.867 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerUtils - Setting offset for partition report-stats-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[asaf:9092 (id: 0 rack: null)], epoch=0}}
2025-01-20 23:05:04.867 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerUtils - Setting offset for partition patient-email-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[asaf:9092 (id: 0 rack: null)], epoch=0}}
2025-01-20 23:05:04.867 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerUtils - Setting offset for partition patient-stats-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[asaf:9092 (id: 0 rack: null)], epoch=0}}
2025-01-20 23:05:04.869 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - patients: partitions assigned: [patient-stats-0]
2025-01-20 23:05:04.869 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  KafkaMessageListenerContainer - patient-email: partitions assigned: [patient-email-topic-0]
2025-01-20 23:05:04.976 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - reports: partitions assigned: [report-stats-0]
2025-01-20 23:10:03.463 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 23:14:04.732 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:14:04.732 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:14:04.732 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-5, groupId=patients] Node -1 disconnected.
2025-01-20 23:14:04.768 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-6, groupId=patients] Node -1 disconnected.
2025-01-20 23:14:04.769 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-9, groupId=reports] Node -1 disconnected.
2025-01-20 23:14:04.784 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-8, groupId=reports] Node -1 disconnected.
2025-01-20 23:14:05.063 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patients-4, groupId=patients] Node -1 disconnected.
2025-01-20 23:14:05.063 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-reports-7, groupId=reports] Node -1 disconnected.
2025-01-20 23:14:05.064 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  NetworkClient - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Node -1 disconnected.
2025-01-20 23:15:03.511 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 23:20:03.547 [AsyncResolver-bootstrap-executor-0] INFO  ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-01-20 23:20:26.574 [SpringApplicationShutdownHook] INFO  EurekaServiceRegistry - Unregistering application ANALYTICS-SERVICE with eureka with status DOWN
2025-01-20 23:20:26.593 [SpringApplicationShutdownHook] INFO  DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1737404426586, current=DOWN, previous=UP]
2025-01-20 23:20:26.597 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085: registering service...
2025-01-20 23:20:26.804 [DiscoveryClient-InstanceInfoReplicator-0] INFO  DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085 - registration status: 204
2025-01-20 23:20:26.885 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Member consumer-reports-8-0c1686e1-2965-4c22-b333-a7f565ad0569 sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 23:20:26.885 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Member consumer-patient-email-2-eff35a8b-efd7-497d-8128-1f2312efc728 sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 23:20:26.885 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Member consumer-patients-5-59abac15-fb9c-4fd9-92a9-5ab5f67dc4c2 sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 23:20:26.885 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Revoke previously assigned partitions patient-email-topic-0
2025-01-20 23:20:26.885 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-reports-7, groupId=reports] Revoke previously assigned partitions report-stats-0
2025-01-20 23:20:26.886 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Member consumer-reports-9-c0b2fe78-1384-45e5-84bd-7a250ee39094 sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 23:20:26.886 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Member consumer-patient-email-3-90b33a79-ca0d-487c-85d4-2ef502ff7c01 sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 23:20:26.887 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Member consumer-patients-6-a2244595-c767-466d-8dcd-ae1a150ca427 sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 23:20:26.887 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-patients-4, groupId=patients] Revoke previously assigned partitions patient-stats-0
2025-01-20 23:20:26.893 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - reports: partitions revoked: [report-stats-0]
2025-01-20 23:20:26.894 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  KafkaMessageListenerContainer - patient-email: partitions revoked: [patient-email-topic-0]
2025-01-20 23:20:26.897 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - patients: partitions revoked: [patient-stats-0]
2025-01-20 23:20:26.902 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.902 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.902 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.902 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.903 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.902 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.903 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.903 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:20:26.903 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-5, groupId=patients] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:20:26.903 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.903 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-9, groupId=reports] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:20:26.903 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.903 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.903 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:20:26.904 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.904 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.904 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-6, groupId=patients] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:20:26.903 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-8, groupId=reports] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:20:26.914 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Member consumer-patient-email-1-0f45f830-3f9e-405f-a31a-88e25f62286d sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 23:20:26.915 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.915 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Member consumer-reports-7-f1ec6423-1e5f-4ddc-b861-81ff50a9e26d sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 23:20:26.915 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.917 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:20:26.915 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.917 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.918 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-reports-7, groupId=reports] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:20:26.917 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Member consumer-patients-4-8ffb1fd1-2ec6-4b14-8cbe-3565abe04990 sending LeaveGroup request to coordinator asaf:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-01-20 23:20:26.920 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.921 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.921 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  LegacyKafkaConsumer - [Consumer clientId=consumer-patients-4, groupId=patients] Unsubscribed all topics or patterns and assigned partitions
2025-01-20 23:20:26.924 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.924 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-5, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.926 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.926 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-3, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.928 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.930 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-8, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.931 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.932 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-7, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.933 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.933 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-reports-9, groupId=reports] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.935 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.936 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-6, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.936 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.936 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-2, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.937 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.937 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patient-email-1, groupId=patient-email] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.941 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-01-20 23:20:26.942 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator - [Consumer clientId=consumer-patients-4, groupId=patients] Request joining group due to: consumer pro-actively leaving the group
2025-01-20 23:20:27.661 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:20:27.661 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:20:27.661 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:20:27.661 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:20:27.663 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:20:27.663 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:20:27.663 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:20:27.663 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:20:27.663 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:20:27.663 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:20:27.663 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:20:27.664 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:20:27.663 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:20:27.664 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:20:27.664 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:20:27.664 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:20:27.664 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:20:27.664 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:20:27.664 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:20:27.667 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:20:27.750 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patient-email-3 unregistered
2025-01-20 23:20:27.751 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-reports-8 unregistered
2025-01-20 23:20:27.751 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patient-email-2 unregistered
2025-01-20 23:20:27.751 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patients-5 unregistered
2025-01-20 23:20:27.752 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patients-6 unregistered
2025-01-20 23:20:27.778 [org.springframework.kafka.KafkaListenerEndpointContainer#1-1-C-1] INFO  KafkaMessageListenerContainer - reports: Consumer stopped
2025-01-20 23:20:27.779 [org.springframework.kafka.KafkaListenerEndpointContainer#2-1-C-1] INFO  KafkaMessageListenerContainer - patient-email: Consumer stopped
2025-01-20 23:20:27.782 [org.springframework.kafka.KafkaListenerEndpointContainer#2-2-C-1] INFO  KafkaMessageListenerContainer - patient-email: Consumer stopped
2025-01-20 23:20:27.781 [org.springframework.kafka.KafkaListenerEndpointContainer#0-2-C-1] INFO  KafkaMessageListenerContainer - patients: Consumer stopped
2025-01-20 23:20:27.784 [org.springframework.kafka.KafkaListenerEndpointContainer#0-1-C-1] INFO  KafkaMessageListenerContainer - patients: Consumer stopped
2025-01-20 23:20:27.841 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:20:27.841 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:20:27.841 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:20:27.842 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:20:27.842 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:20:27.842 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:20:27.842 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:20:27.842 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:20:27.842 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:20:27.842 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:20:27.843 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:20:27.843 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:20:27.845 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-reports-7 unregistered
2025-01-20 23:20:27.845 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - reports: Consumer stopped
2025-01-20 23:20:27.848 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics - Metrics scheduler closed
2025-01-20 23:20:27.849 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-01-20 23:20:27.849 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-01-20 23:20:27.849 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics - Metrics reporters closed
2025-01-20 23:20:27.852 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patient-email-1 unregistered
2025-01-20 23:20:27.852 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  KafkaMessageListenerContainer - patient-email: Consumer stopped
2025-01-20 23:20:27.858 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-reports-9 unregistered
2025-01-20 23:20:27.858 [org.springframework.kafka.KafkaListenerEndpointContainer#1-2-C-1] INFO  KafkaMessageListenerContainer - reports: Consumer stopped
2025-01-20 23:20:27.859 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser - App info kafka.consumer for consumer-patients-4 unregistered
2025-01-20 23:20:27.859 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - patients: Consumer stopped
2025-01-20 23:20:29.878 [SpringApplicationShutdownHook] INFO  DiscoveryClient - Shutting down DiscoveryClient ...
2025-01-20 23:20:32.893 [SpringApplicationShutdownHook] INFO  DiscoveryClient - Unregistering ...
2025-01-20 23:20:32.931 [SpringApplicationShutdownHook] INFO  RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:297)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:842)

2025-01-20 23:20:32.932 [SpringApplicationShutdownHook] WARN  RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-01-20 23:20:32.973 [SpringApplicationShutdownHook] INFO  RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=Connection pool shut down stacktrace=java.lang.IllegalStateException: Connection pool shut down
	at org.apache.hc.core5.util.Asserts.check(Asserts.java:38)
	at org.apache.hc.core5.pool.StrictConnPool.lease(StrictConnPool.java:176)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.lease(PoolingHttpClientConnectionManager.java:297)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.acquireEndpoint(InternalExecRuntime.java:103)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:125)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$0(RestTemplateTransportClientFactory.java:143)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:842)

2025-01-20 23:20:32.973 [SpringApplicationShutdownHook] WARN  RetryableEurekaHttpClient - Request execution failed with message: Connection pool shut down
2025-01-20 23:20:32.973 [SpringApplicationShutdownHook] ERROR DiscoveryClient - DiscoveryClient_ANALYTICS-SERVICE/asaf:analytics-service:8085 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916) ~[eureka-client-2.0.2.jar:2.0.2]
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892) ~[eureka-client-2.0.2.jar:2.0.2]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389) ~[spring-cloud-context-4.1.2.jar:4.1.2]
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136) ~[spring-cloud-context-4.1.2.jar:4.1.2]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.12.jar:6.1.12]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1195) ~[spring-context-6.1.12.jar:6.1.12]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1156) ~[spring-context-6.1.12.jar:6.1.12]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174) ~[spring-boot-3.3.3.jar:3.3.3]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1102) ~[spring-context-6.1.12.jar:6.1.12]
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145) ~[spring-boot-3.3.3.jar:3.3.3]
	at java.base/java.lang.Iterable.forEach(Iterable.java:75) [?:?]
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114) [spring-boot-3.3.3.jar:3.3.3]
	at java.base/java.lang.Thread.run(Thread.java:842) [?:?]
2025-01-20 23:20:32.997 [SpringApplicationShutdownHook] INFO  DiscoveryClient - Completed shut down of DiscoveryClient
